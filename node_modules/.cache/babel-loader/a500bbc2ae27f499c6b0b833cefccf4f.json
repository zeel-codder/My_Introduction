{"ast":null,"code":"var _jsxFileName = \"/home/zeel/Desktop/web/My_Introduction/my-introduction/src/Halpper/prisumh.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Prisumh = props => {\n  _s();\n\n  useEffect(() => {\n    // highlight()\n    Prism.hooks.add('before-highlight', function (env) {\n      env.element.innerHTML = env.element.innerHTML.replace(/<br\\s*\\/?>/g, '\\n');\n      env.code = env.element.textContent.replace(/^(?:\\r?\\n|\\r)/, '');\n    });\n    Prism.highlightAll();\n  }, []);\n  const {\n    code,\n    plugins,\n    language\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"pre\", {\n    className: !plugins ? \"\" : plugins.join(\" \"),\n    children: /*#__PURE__*/_jsxDEV(\"code\", {\n      className: `language-${language}`,\n      children: code.trim()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Prisumh, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Prisumh;\nexport default Prisumh;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prisumh\");","map":{"version":3,"sources":["/home/zeel/Desktop/web/My_Introduction/my-introduction/src/Halpper/prisumh.js"],"names":["useRef","useEffect","Prism","Prisumh","props","hooks","add","env","element","innerHTML","replace","code","textContent","highlightAll","plugins","language","join","trim"],"mappings":";;;AAAA,SAAQA,MAAR,EAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAGA,MAAMC,OAAO,GAAEC,KAAD,IAAS;AAAA;;AAIrBH,EAAAA,SAAS,CAAC,MAAM;AACd;AACAC,IAAAA,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,kBAAhB,EAAoC,UAASC,GAAT,EAAc;AAChDA,MAAAA,GAAG,CAACC,OAAJ,CAAYC,SAAZ,GAAwBF,GAAG,CAACC,OAAJ,CAAYC,SAAZ,CAAsBC,OAAtB,CAA8B,aAA9B,EAA4C,IAA5C,CAAxB;AACAH,MAAAA,GAAG,CAACI,IAAJ,GAAWJ,GAAG,CAACC,OAAJ,CAAYI,WAAZ,CAAwBF,OAAxB,CAAgC,eAAhC,EAAgD,EAAhD,CAAX;AACH,KAHC;AAIAR,IAAAA,KAAK,CAACW,YAAN;AACD,GAPQ,EAON,EAPM,CAAT;AASA,QAAM;AAAEF,IAAAA,IAAF;AAAQG,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA8BX,KAApC;AACE,sBACE;AAAK,IAAA,SAAS,EAAE,CAACU,OAAD,GAAW,EAAX,GAAgBA,OAAO,CAACE,IAAR,CAAa,GAAb,CAAhC;AAAA,2BACE;AAAM,MAAA,SAAS,EAAG,YAAWD,QAAS,EAAtC;AAAA,gBACGJ,IAAI,CAACM,IAAL;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOH,CArBD;;GAAMd,O;;KAAAA,O;AAuBN,eAAeA,OAAf","sourcesContent":["import {useRef,useEffect} from \"react\"\nimport Prism from \"prismjs\"\n\n\nconst Prisumh=(props)=>{\n\n\n\n  useEffect(() => {\n    // highlight()\n    Prism.hooks.add('before-highlight', function(env) {\n      env.element.innerHTML = env.element.innerHTML.replace(/<br\\s*\\/?>/g,'\\n');\n      env.code = env.element.textContent.replace(/^(?:\\r?\\n|\\r)/,'');\n  });\n    Prism.highlightAll()\n  }, [])\n\n  const { code, plugins, language } = props\n    return (\n      <pre className={!plugins ? \"\" : plugins.join(\" \")}>\n        <code className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n}\n\nexport default Prisumh;"]},"metadata":{},"sourceType":"module"}