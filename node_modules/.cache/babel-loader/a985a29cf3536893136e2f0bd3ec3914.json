{"ast":null,"code":"var _jsxFileName = \"/home/zeel/Desktop/web/My_Introduction/my-introduction/src/Halpper/Blog/BlogPage.js\",\n    _s = $RefreshSig$();\n\nimport { useGlobalContext } from '../context';\nimport { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport Prism from \"prismjs\";\nimport marked from 'marked'; // import file1 from '../../Blogs/Html/Html4SimpleTages/Html4SimpleTages.js';\n// import file from '../../Blogs/Html/Html4SimpleTages/Html4SimpleTages.md';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Blog = () => {\n  _s();\n\n  const {\n    BlogInfo\n  } = useGlobalContext();\n  const {\n    blogname\n  } = useParams();\n  const [data, setdata] = useState(\"\"); // console.log(BlogData)\n  // let dic=BlogData.find((data)=>data.id===1) \n\n  useEffect(() => {\n    Prism.highlightAll();\n    let Blog = BlogInfo.find(data1 => data1.data.find(value => value.name === blogname));\n    Blog = Blog.data.find(value => value.name === blogname);\n    let link = Blog.link;\n\n    const file = require(link);\n\n    fetch(file).then(response => {\n      return response.text();\n    }).then(text => {\n      setdata(marked(`${text}`).trim());\n    }); // setdata(Blog);\n    // console.log()\n    // setdata([])\n    // console.log(slug)\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"blog-container\",\n    dangerouslySetInnerHTML: {\n      __html: data\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Blog, \"QnRYBNQMcx4K/7JnpB/V2a15YfQ=\", false, function () {\n  return [useGlobalContext, useParams];\n});\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/home/zeel/Desktop/web/My_Introduction/my-introduction/src/Halpper/Blog/BlogPage.js"],"names":["useGlobalContext","useEffect","useState","useParams","Prism","marked","Blog","BlogInfo","blogname","data","setdata","highlightAll","find","data1","value","name","link","file","require","fetch","then","response","text","trim","__html"],"mappings":";;;AAAA,SAAQA,gBAAR,QAA+B,YAA/B;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;AAEA;;;;AAEA,MAAMC,IAAI,GAAC,MAAI;AAAA;;AAIX,QAAM;AAACC,IAAAA;AAAD,MAAWP,gBAAgB,EAAjC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAcL,SAAS,EAA7B;AACA,QAAM,CAACM,IAAD,EAAMC,OAAN,IAAeR,QAAQ,CAAC,EAAD,CAA7B,CANW,CAQX;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACO,YAAN;AACA,QAAIL,IAAI,GAACC,QAAQ,CAACK,IAAT,CAAeC,KAAD,IAAUA,KAAK,CAACJ,IAAP,CAAaG,IAAb,CAAkBE,KAAK,IAAEA,KAAK,CAACC,IAAN,KAAaP,QAAtC,CAAvB,CAAT;AACAF,IAAAA,IAAI,GAACA,IAAI,CAACG,IAAL,CAAUG,IAAV,CAAeE,KAAK,IAAEA,KAAK,CAACC,IAAN,KAAaP,QAAnC,CAAL;AACA,QAAIQ,IAAI,GAACV,IAAI,CAACU,IAAd;;AACA,UAAMC,IAAI,GAACC,OAAO,CAACF,IAAD,CAAlB;;AACAG,IAAAA,KAAK,CAACF,IAAD,CAAL,CACCG,IADD,CACMC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHD,EAICF,IAJD,CAIME,IAAI,IAAI;AACZZ,MAAAA,OAAO,CACLL,MAAM,CAAE,GAAEiB,IAAK,EAAT,CAAN,CAAkBC,IAAlB,EADK,CAAP;AAGD,KARD,EANY,CAeZ;AACA;AACA;AACA;AACD,GAnBM,EAmBJ,CAACd,IAAD,CAnBI,CAAT;AAqBA,sBACI;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAoC,IAAA,uBAAuB,EAAE;AAACe,MAAAA,MAAM,EAAEf;AAAT;AAA7D;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CApCD;;GAAMH,I;UAIeN,gB,EACGG,S;;;KALlBG,I;AAsCN,eAAeA,IAAf","sourcesContent":["import {useGlobalContext} from '../context'\nimport {useEffect,useState} from \"react\"\nimport {useParams} from 'react-router-dom';\nimport Prism from \"prismjs\"\nimport marked from 'marked';\n// import file1 from '../../Blogs/Html/Html4SimpleTages/Html4SimpleTages.js';\n\n// import file from '../../Blogs/Html/Html4SimpleTages/Html4SimpleTages.md';\n\nconst Blog=()=>{\n  \n\n    \n    const {BlogInfo}=useGlobalContext();\n    const {blogname}  = useParams();\n    const [data,setdata]=useState(\"\");\n    \n    // console.log(BlogData)\n    // let dic=BlogData.find((data)=>data.id===1) \n\n    useEffect(() => {\n        Prism.highlightAll()\n        let Blog=BlogInfo.find((data1)=>(data1.data).find(value=>value.name===blogname));\n        Blog=Blog.data.find(value=>value.name===blogname);\n        let link=Blog.link;\n        const file=require(link);\n        fetch(file)\n        .then(response => {\n          return response.text()\n        })\n        .then(text => {\n          setdata(\n            marked(`${text}`).trim()\n            )\n        })\n        // setdata(Blog);\n        // console.log()\n        // setdata([])\n        // console.log(slug)\n      }, [data])\n\n    return (\n        <article className=\"blog-container\" dangerouslySetInnerHTML={{__html: data}}></article>\n      \n    )\n}\n\nexport default Blog;"]},"metadata":{},"sourceType":"module"}